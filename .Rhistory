ggplot2::labs(x = xlab, y = ylab) +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 12)) +
ggplot2::scale_colour_viridis_d()
plot <- plot + ggplot2::geom_point(colour = point_colour, alpha = point_alpha, size = point_size)
if (title_n == TRUE){
plot <- plot + ggplot2::ggtitle(paste0("N = ", nrow(data), " (", round(random_sample_frac * 100, 2), "% of the sample)"))
}
if (scale_x_num == FALSE) {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = var_list)
} else {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = scale_x_num_start:(length(var_list) + scale_x_num_start - 1))
}
if (smooth == TRUE) {
plot_x_scale + ggplot2::geom_smooth(ggplot2::aes(group = 1), size = 2, method = smooth_method, se = smooth_se, colour = line_colour, fill = "gray22")
} else {
plot_x_scale
}
}
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
random_sample_frac = 0.1,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
random_sample_frac = 0.2,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
library(ggplot2)
ggsave("attn_trajectores.png", width = 5.5, height = 4, units = "in", dpi = 300)
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
line_colour  = "#mediumorchid",
random_sample_frac = 0.2,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
line_colour  = "mediumorchid",
random_sample_frac = 0.2,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
plot_trajectories <- function(data, id_var, var_list, line_colour = "mediumorchid", group_var = NULL, point_colour = "mediumorchid", line_alpha = .2, point_alpha = .2, point_size = 1, smooth = FALSE, smooth_method = "loess", smooth_se = FALSE, xlab = "X", ylab = "Y", scale_x_num = FALSE, scale_x_num_start = 1, random_sample_frac = 1, seed = 1234, title_n = FALSE, connect_missing = TRUE){
set.seed(seed = seed)
data <- dplyr::sample_frac(tbl = data, size = random_sample_frac)
var_names <- names(data)
var_names_wide <- var_names[!var_names %in% var_list]
data_plot <- data %>%
# dplyr::select(id_var, var_list) %>%
tidyr::gather(variable, value, -var_names_wide) %>%
dplyr::mutate(variable = factor(variable, var_list))
if (is.null(group_var) == TRUE) {
plot <- data_plot %>%
ggplot2::ggplot(ggplot2::aes(x = variable, y = value, group = !!rlang::sym(id_var))) +
ggplot2::labs(x = xlab, y = ylab) +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 12))
if (connect_missing == TRUE) {
plot <- plot + ggplot2::geom_line(data = data_plot[!is.na(data_plot$value), ],
colour = line_colour,
alpha = line_alpha)
} else if (connect_missing == FALSE) {
plot <- plot + ggplot2::geom_line(data = data_plot,
colour = line_colour,
alpha = line_alpha)
}
} else if (is.null(group_var) == FALSE)
plot <- data_plot %>%
ggplot2::ggplot(ggplot2::aes(x = variable, y = value, group = !!rlang::sym(id_var), colour = factor(!!rlang::sym(group_var)))) +
ggplot2::labs(x = xlab, y = ylab) +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 12)) +
ggplot2::scale_colour_viridis_d()
plot <- plot + ggplot2::geom_point(colour = point_colour, alpha = point_alpha, size = point_size)
if (title_n == TRUE){
plot <- plot + ggplot2::ggtitle(paste0("N = ", nrow(data), " (", round(random_sample_frac * 100, 2), "% of the sample)"))
}
if (scale_x_num == FALSE) {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = var_list)
} else {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = scale_x_num_start:(length(var_list) + scale_x_num_start - 1))
}
if (smooth == TRUE) {
plot_x_scale + ggplot2::geom_smooth(ggplot2::aes(group = 1), size = 2, method = smooth_method, se = smooth_se, colour = line_colour, fill = "gray22")
} else {
plot_x_scale
}
plot + stat_summary(aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
}
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
line_colour  = "mediumorchid",
random_sample_frac = 0.2,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
plot + stat_summary(dataplot, aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
plot_trajectories <- function(data, id_var, var_list, line_colour = "mediumorchid", group_var = NULL, point_colour = "mediumorchid", line_alpha = .2, point_alpha = .2, point_size = 1, smooth = FALSE, smooth_method = "loess", smooth_se = FALSE, xlab = "X", ylab = "Y", scale_x_num = FALSE, scale_x_num_start = 1, random_sample_frac = 1, seed = 1234, title_n = FALSE, connect_missing = TRUE){
set.seed(seed = seed)
data <- dplyr::sample_frac(tbl = data, size = random_sample_frac)
var_names <- names(data)
var_names_wide <- var_names[!var_names %in% var_list]
data_plot <- data %>%
# dplyr::select(id_var, var_list) %>%
tidyr::gather(variable, value, -var_names_wide) %>%
dplyr::mutate(variable = factor(variable, var_list))
if (is.null(group_var) == TRUE) {
plot <- data_plot %>%
ggplot2::ggplot(ggplot2::aes(x = variable, y = value, group = !!rlang::sym(id_var))) +
ggplot2::labs(x = xlab, y = ylab) +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 12))
if (connect_missing == TRUE) {
plot <- plot + ggplot2::geom_line(data = data_plot[!is.na(data_plot$value), ],
colour = line_colour,
alpha = line_alpha)
} else if (connect_missing == FALSE) {
plot <- plot + ggplot2::geom_line(data = data_plot,
colour = line_colour,
alpha = line_alpha)
}
} else if (is.null(group_var) == FALSE)
plot <- data_plot %>%
ggplot2::ggplot(ggplot2::aes(x = variable, y = value, group = !!rlang::sym(id_var), colour = factor(!!rlang::sym(group_var)))) +
ggplot2::labs(x = xlab, y = ylab) +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 12)) +
ggplot2::scale_colour_viridis_d()
plot <- plot + ggplot2::geom_point(colour = point_colour, alpha = point_alpha, size = point_size)
if (title_n == TRUE){
plot <- plot + ggplot2::ggtitle(paste0("N = ", nrow(data), " (", round(random_sample_frac * 100, 2), "% of the sample)"))
}
if (scale_x_num == FALSE) {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = var_list)
} else {
plot_x_scale <- plot + ggplot2::scale_x_discrete(labels = scale_x_num_start:(length(var_list) + scale_x_num_start - 1))
}
if (smooth == TRUE) {
plot_x_scale + ggplot2::geom_smooth(ggplot2::aes(group = 1), size = 2, method = smooth_method, se = smooth_se, colour = line_colour, fill = "gray22")
} else {
plot_x_scale
}
plot + stat_summary(dataplot, aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
}
## full sample
plot_all <- plot_trajectories(data = mydata,
id_var = "id",
var_list = x_var_list,
xlab = "Age", ylab = "IBR Attention Scores",
connect_missing = FALSE,
line_colour  = "mediumorchid",
random_sample_frac = 0.2,
title_n = TRUE) +
scale_x_discrete(labels=c("6 months", "15 months", "24 months"))
plot_all
data_plot <- mydata %>%
# dplyr::select(id_var, var_list) %>%
tidyr::gather(variable, value, -var_names_wide) %>%
dplyr::mutate(variable = factor(variable, var_list))
var_names <- names(mydata)
var_names
var_names_wide <- var_names[!var_names %in% x_var_list]
var_names_wide
df <- mydata %>%
# dplyr::select(id_var, var_list) %>%
tidyr::gather(variable, value, -var_names_wide) %>%
dplyr::mutate(variable = factor(variable, var_list))
df <- mydata %>%
# dplyr::select(id_var, var_list) %>%
tidyr::gather(variable, value, -var_names_wide) %>%
dplyr::mutate(variable = factor(variable, x_var_list))
df
View(df)
p = plot_all + stat_summary(df, aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
p = plot_all + stat_summary(df, aes(x=variable, y = value), fun.y=mean, geom="line", colour="mediumorchid")
p = plot_all + stat_summary(df, aes(group=variable, y = value), fun.y=mean, geom="line", colour="mediumorchid")
? stat_summary
p = plot_all + stat_summary(df, mapping=variable, aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
View(df)
p = plot_all + stat_summary(df, mapping=df$variable, aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
p = plot_all + stat_summary(df, mapping = aes(group=variable), fun.y=mean, geom="line", colour="mediumorchid")
p
p = plot_all + stat_summary(df, mapping = aes(group=variable, y = value), fun.y=mean, geom="line", colour="mediumorchid")
p
p = plot_all + stat_summary(df, mapping = aes(x=variable, y = value), fun.y=mean, geom="line", colour="mediumorchid")
p
df2 = df %>% group_by(variable) %>%
summarise(variable=mean(value)),
aes(x = variable, y = value))
df2 = df %>% group_by(variable) %>%
summarise(variable=mean(value)),
aes(x = variable, y = value)
df2
df2 = df %>% group_by(variable) %>%
summarise(variable=mean(value))
df2
df2 = df %>% group_by(variable) %>%
summarise(variable=mean(value, na.rm=T))
df2
View(df2)
p = plot_all + geom_line(data = df2, colour="mediumorchid", linetype="11", size=0.3)
p
df2 = df %>% group_by(variable) %>%
summarise(value=mean(value, na.rm=T))
p = plot_all + geom_line(data = df2, colour="mediumorchid", linetype="11", size=0.3)
p
View(df2)
p = plot_all + geom_line(data = df2, aes(group=variable, y=value), colour="mediumorchid", linetype="11", size=0.3)
p
p = plot_all + geom_line(data = df2, aes(group=variable, y=value), colour="black", linetype="11", size=0.3)
p
p = plot_all + geom_line(data = df2, aes(x=variable, y=value), colour="black", linetype="11", size=0.3)
p
p = plot_all + geom_hline(data = df2, aes( value, variable ))
p
p = plot_all + geom_hline(data = df2, aes(yintercept = value, col = variable ))
p
p = plot_all + geom_line(data = df2, aes(x = variable, y = value))
p
p = geom_line(data = df2, aes(x = variable, y = value))
p
p = ggplot2(data = df2, aes(x=variable,y=value)) + geom_line()
library(ggplot2)
p = ggplot2(data = df2, aes(x=variable,y=value)) + geom_line()
p = ggplot(data = df2, aes(x=variable,y=value)) + geom_line()
p
View(mydata)
View(df)
p = ggplot(data = df, aes(x=variable,y=value)) + geom_line()
p
p = ggplot(data = df) + geom_line(aes(x=variable,y=value))
p
p = ggplot(data = df2) + geom_line(aes(x = variable, y = value))
p
p = ggplot(data = df) + geom_line(aes(x = variable, y = value))
p
View(df)
p = ggplot(data = df) + geom_line(aes(x = factor(variable), y = value))
p
p = ggplot(data = df2) + geom_line(aes(x = factor(variable), y = value))
p
View(mydata)
p = ggplot(data = df2) + geom_line(aes(x = factor(variable), y = value, group = variable))
p
p = ggplot(data = df2) + geom_line(aes(x = factor(variable), y = value, group = NA))
p
View(df2)
p = plot_all + ggplot(data = df2) + geom_line(aes(x = factor(variable), y = value, group = NA))
p = plot_all + geom_line(data = df2, aes(x = factor(variable), y = value, group = NA))
p
df2 = df %>% group_by(variable) %>%
summarise(value=mean(value, na.rm=T),
lower = (mean(value, na.rm=T) - sd(value,na.rm+T)),
upper = (mean(value, na.rm=T) + sd(value,na.rm+T)))
View(df2)
df2 = df %>% group_by(variable) %>%
summarise(value2=mean(value, na.rm=T),
lower = (mean(value, na.rm=T) - sd(value,na.rm+T)),
upper = (mean(value, na.rm=T) + sd(value,na.rm+T)))
df2 = df %>% group_by(variable) %>%
summarise(value=mean(value, na.rm=T),
lower = (mean(value, na.rm=T) - sd(value,na.rm=T)),
upper = (mean(value, na.rm=T) + sd(value,na.rm=T)))
df2
df2 = df %>% group_by(variable) %>%
summarise(value2=mean(value, na.rm=T),
lower = (mean(value, na.rm=T) - sd(value,na.rm=T)),
upper = (mean(value, na.rm=T) + sd(value,na.rm=T)))
df2
p = plot_all + geom_line(data = df2, aes(x = factor(variable), y = value, group = NA)) +
geom_ribbon(data = df2, aes(ymin=lower,ymax=upper), alpha = .3, linetype=2)
p
p = plot_all + geom_line(data = df2, aes(x = factor(variable), y = value2, group = NA)) +
geom_ribbon(data = df2, aes(ymin=lower,ymax=upper), alpha = .3, linetype=2)
p
df2 = df %>% group_by(variable) %>%
summarise(lower = (mean(value, na.rm=T) - sd(value,na.rm=T)),
upper = (mean(value, na.rm=T) + sd(value,na.rm=T)),
value=mean(value, na.rm=T))
df2
p = plot_all + geom_line(data = df2, aes(x = factor(variable), y = value, group = NA)) +
geom_ribbon(data = df2, aes(ymin=lower,ymax=upper), alpha = .3, linetype=2)
p
p = plot_all + geom_line(data = df2, aes(x = factor(variable), y = value, group = NA)) +
geom_ribbon(data = df2, aes(ymin=lower,ymax=upper, group=NA), alpha = .3, linetype=2)
p
setwd("/Users/werchd01/Dropbox/COPE/OWLET_APPLICATION_PAPER")
#df = read.csv("cope_updated_10.12.csv")
attn = read.csv("cope_attn_fulldata.csv")
library(CopeData)
token = '2F87C1121E47362EB7F05DC6FFC6734A'
three = 'infant_3months_arm_1'
six = 'infant_6months_arm_1'
nine = 'infant_9months_arm_1'
twelve = 'infant_12months1_arm_1'
disc = get_data(token, "discrimination_questionnaire")
disc_lab = get_data(token, "discrimination_questionnaire", "label")
View(disc)
disc = disc[,c("record_id", "disc_stress")]
disc = disc[,c("record_id", "discrim_stress")]
df <- merge(attn, disc, by = "record_id", all.x = T)
View(df)
## infant attention by covid analyses
mod <- 'attn ~ income + stress + mood + covid + stressxcovid'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
library(lavaan)
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'attn ~ income + stress + mood + covid + discrim_stress + stressxcovid'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'attn ~ income + stress + mood + covid + discrim_stress '
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + discrim_stress '
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
df$stressxdisc <- df$stress * df$discrim_stress
## infant attention by covid analyses
mod <- 'attn ~ income + mood + discrim_stress + stress + stressxdisc'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + a*discrim_stress
attn ~ income + mood + cp*discrim_stress + b*stress'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + a*discrim_stress
attn ~ income + mood + cp*discrim_stress + b*stress
ab := a*b
total := ab + cp'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + a*discrim_stress
attn ~ income + mood + cp*discrim_stress + b*stress + covid
ab := a*b
total := ab + cp'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
attn ~ income + mood + discrim_stress + stress + discrim_stress:stress
#ab := a*b
#total := ab + cp'
#ab := a*b
#total := ab + cp'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
attn ~ income + mood + discrim_stress + stress + discrim_stress:stress
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
attn ~ income + mood + discrim_stress + covid + discrim_stress:covid
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
competence ~ income + mood + discrim_stress + covid + discrim_stress:covid
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
competence ~ income + mood + discrim_stress + stress + discrim_stress:stress
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
problems ~ income + mood + discrim_stress + stress + discrim_stress:stress
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- '#stress ~ income + mood + a*discrim_stress
problems ~ income + mood + discrim_stress + stress + covid + stressxcovid + discrim_stress:stressxcovid
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + discrim_stress + covid
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + discrim_stress + covid + covid:discrim_stress
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'attn ~ stress + income + mood + discrim_stress + covid + stressxcovid
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
write.csv(df, "attn_discrim.csv", na="999")
#df = read.csv("cope_updated_10.12.csv")
attn = read.csv("cope_attn_fulldata.csv")
## infant attention by covid analyses
mod <- 'stress ~ income + mood + discrim_stress + covid + race_BIPOC
'
fit2 <- sem(mod, data=df, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
fit2 <- sem(mod, data=attn, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ income + mood + covid + race_BIPOC
'
fit2 <- sem(mod, data=attn, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ covid + race_BIPOC + covid:race_BIPOC
'
fit2 <- sem(mod, data=attn, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
## infant attention by covid analyses
mod <- 'stress ~ discrim_stress + covid + covid:discrim_stress
'
fit2 <- sem(mod, data=attn, missing='fiml', meanstructure=TRUE, fixed.x=FALSE)
summary(fit2, fit.measures=TRUE, rsquare=TRUE, standardize=TRUE, ci = FALSE)
#df = read.csv("cope_updated_10.12.csv")
attn = read.csv("cope_attn_fulldata.csv")
fit <- glm(problem_thres ~ attn + income + stress + covid + stressxcovid, data = attn, family = "binomial")
summary(fit)
fit <- glm(comp_thres ~ attn + income + stress + covid + stressxcovid, data = attn, family = "binomial")
summary(fit)
fit <- glm(competence_thres ~ attn + income + stress + covid + stressxcovid, data = attn, family = "binomial")
summary(fit)
fit <- glm(autism_comp_thresh ~ attn + income + stress + covid + stressxcovid, data = attn, family = "binomial")
summary(fit)
fit <- glm(autism_comp_thresh ~ attn + income + covid, data = attn, family = "binomial")
summary(fit)
fit <- glm(competence_thresh ~ attn + income + covid, data = attn, family = "binomial")
fit <- glm(competence_thres ~ attn + income + covid, data = attn, family = "binomial")
summary(fit)
fit <- glm(competence_thres ~ attn + income, data = attn, family = "binomial")
summary(fit)
exp(-2.79)
fit <- glm(competence_thres ~ covid + stress + stressxcovid + income, data = attn, family = "binomial")
summary(fit)
median(attn$attn, na.rm=TRUE)
attn$attn_binary <- NA
attn$attn_binary[attn$attn <= -.68] = 1
attn$attn_binary[attn$attn > -.68] = 0
fit <- glm(competence_thres ~ attn_binary + income, data = attn, family = "binomial")
summary(fit)
exp(1.72)
fit <- glm(competence_thres ~ attn_binary + income + covid + stress + stressxcovid, data = attn, family = "binomial")
summary(fit)
exp(2.15380)
fit <- glm(competence_thres ~ attn_binary + income + covid + stress, data = attn, family = "binomial")
summary(fit)
fit <- glm(competence_thres ~ attn_binary, data = attn, family = "binomial")
summary(fit)
exp(1.5755)
fit <- glm(autism_comp_thres ~ attn_binary, data = attn, family = "binomial")
fit <- glm(autism_comp_thresh ~ attn_binary, data = attn, family = "binomial")
summary(fit)
exp(1.5369)
fit <- glm(autism_comp_thresh ~ attn_binary + income, data = attn, family = "binomial")
summary(fit)
exp(1.65046)
fit <- glm(competence_thres ~ attn_binary + income, data = attn, family = "binomial")
summary(fit)
exp(1.72614)
fit <- glm(competence ~ attn_binary + income, data = attn, family = "binomial")
fit <- glm(competence ~ attn_binary + income, data = attn, family = "binomial", ci = TRUE)
? glm
fit <- glm(competence_thres ~ attn_binary + income, data = attn, family = "binomial")
confint(fit)
exp(0.6475104)
exp(2.93895445)
summary(fit)
exp(1.72614)
fit <- glm(autism_comp_thresh ~ attn_binary + income, data = attn, family = "binomial")
summary(fit)
exp(1.65046)
confint(fit)
exp(0.4622391)
exp(3.04298173)
